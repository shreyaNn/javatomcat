pipeline {
    agent any
    environment {
        scannerHome = tool 'sonar-scanner'
        SONAR_HOST_URL = 'http://localhost:9000' // Make sure this matches your SonarQube URL
        SONAR_LOGIN = credentials('sonartoken')
    }
    stages {
        stage('Checkout') {
            steps {
                script {
                    try {
                        git branch: 'main', url: 'https://github.com/shreyaNn/javatomcat.git'
                    } catch (Exception e) {
                        echo "Failed to checkout. Error: ${e.getMessage()}"
                        error "Repository checkout failed"
                    }
                }
            }
        }
        stage('SonarQube Analysis') {
            steps {
                script {
                    withCredentials([string(credentialsId: 'sonartoken', variable: 'SONAR_AUTH_TOKEN')]) {
                        try {
                            withSonarQubeEnv('SonarQube') {
                                sh """
                                    ${scannerHome}/bin/sonar-scanner \
                                    -Dsonar.projectKey=javatomcat \
                                    -Dsonar.sources=. \
                                    -Dsonar.host.url=${SONAR_HOST_URL} \
                                    -Dsonar.login=${SONAR_AUTH_TOKEN}
                                """
                            }
                        } catch (Exception e) {
                            echo "SonarQube Analysis failed. Error: ${e.getMessage()}"
                            error "SonarQube Analysis failed"
                        }
                    }
                }
            }
        }
    }
}

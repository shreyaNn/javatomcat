pipeline {
    agent {
        label 'ansible-deploy' // Use the node with the label 'ansible-deploy'
    }
    
    environment {
        NEXUS_URL = 'http://your-nexus-url'
        JAR_NAME = 'your-app.jar'
        BUILD_VERSION = "${env.BUILD_NUMBER}"
        TEST_CONTAINER = 'test-container'
        PROD_SERVER = 'your-ec2-server'
        SSH_KEY_PATH = '/path/to/your-key.pem'  // Path to your SSH private key
        PROD_USER = 'ubuntu'  // Adjust the username if needed
    }
    
    stages {
        stage('Pull from Nexus') {
            steps {
                script {
                    sh "wget ${NEXUS_URL}/repository/your-repo/${JAR_NAME}-${BUILD_VERSION}.jar -O ${JAR_NAME}-${BUILD_VERSION}.jar"
                }
            }
        }
        
        stage('Deploy to Test') {
            steps {
                script {
                    sh """
                    docker run -d --name ${TEST_CONTAINER} ubuntu sleep infinity
                    docker cp ${JAR_NAME}-${BUILD_VERSION}.jar ${TEST_CONTAINER}:/opt/myjarfile/build${BUILD_VERSION}.jar
                    """
                }
            }
        }
        
        stage('Run Tests') {
            steps {
                script {
                    // Placeholder for Selenium tests
                    sh 'echo "Running Selenium tests..."'
                    // Add your actual Selenium test command here
                }
            }
        }
        
        stage('Deploy to Production') {
            steps {
                script {
                    // Using SCP to deploy to EC2
                    sh "scp -i ${SSH_KEY_PATH} ${JAR_NAME}-${BUILD_VERSION}.jar ${PROD_USER}@${PROD_SERVER}:/opt/myjarfile/build${BUILD_VERSION}.jar"
                }
            }
        }
    }
    
    post {
        always {
            script {
                sh "docker stop ${TEST_CONTAINER} || true"
                sh "docker rm ${TEST_CONTAINER} || true"
            }
        }
    }
}

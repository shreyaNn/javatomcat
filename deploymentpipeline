pipeline {
    agent {
        dockerfile {
            filename 'Dockerfile'
            args '-v /var/run/docker.sock:/var/run/docker.sock'
        }
    }
    
    environment {
        NEXUS_URL = 'http://your-nexus-url'
        JAR_NAME = 'your-app.jar'
        BUILD_VERSION = "${env.BUILD_NUMBER}"
        TEST_CONTAINER = 'test-container'
        PROD_SERVER = 'your-ec2-server'
    }
    
    stages {
        stage('Pull from Nexus') {
            steps {
                sh "wget ${NEXUS_URL}/repository/your-repo/${JAR_NAME}-${BUILD_VERSION}.jar -O ${JAR_NAME}"
            }
        }
        
        stage('Deploy to Test') {
            steps {
                sh """
                docker run -d --name ${TEST_CONTAINER} ubuntu
                docker cp ${JAR_NAME} ${TEST_CONTAINER}:/opt/myjarfile/build${BUILD_VERSION}.jar
                """
            }
        }
        
        stage('Run Tests') {
            steps {
                // This is a placeholder for your Selenium test
                sh 'echo "Running Selenium tests..."'
                // Add your actual Selenium test command here
            }
        }
        
        stage('Deploy to Production') {
            steps {
                // Using scp for simplicity, but you can replace this with an Ansible playbook
                sh "scp ${JAR_NAME} ubuntu@${PROD_SERVER}:/opt/myjarfile/build${BUILD_VERSION}.jar"
            }
        }
    }
    
    post {
        always {
            sh "docker stop ${TEST_CONTAINER} || true"
            sh "docker rm ${TEST_CONTAINER} || true"
        }
    }
}

pipeline {
    agent { label 'jenkins-agent-with-ansible' }
    environment {
        NEXUS_URL = 'http://nexus:8081/repository/maven-releases/'
        NEXUS_CREDENTIALS_ID = 'nexus-credentials'
        ARTIFACT_NAME = 'your-artifact'
        BUILD_VERSION = "${env.BUILD_NUMBER}"
        TEST_CONTAINER = 'test-ubuntu'
        PROD_SERVER = 'your-ec2-server'
        PROD_USER = 'ubuntu'
        ANSIBLE_PATH = "/home/jenkins/ansible-agent/ansible-java-app-setup"
    }
    stages {
        stage('Pull WAR from Nexus') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: NEXUS_CREDENTIALS_ID, usernameVariable: 'NEXUS_USER', passwordVariable: 'NEXUS_PASS')]) {
                        sh """
                            curl -u ${NEXUS_USER}:${NEXUS_PASS} -O "${NEXUS_URL}/com/yourcompany/${ARTIFACT_NAME}/${BUILD_VERSION}/${ARTIFACT_NAME}-${BUILD_VERSION}.war"
                        """
                    }
                }
            }
        }
        stage('Deploy to Test') {
            steps {
                script {
                    sh """
                        docker start ${TEST_CONTAINER} || docker run -d --name ${TEST_CONTAINER} ubuntu
                        docker cp ${ARTIFACT_NAME}-${BUILD_VERSION}.war ${TEST_CONTAINER}:/opt/myjarfile/build1.war
                        docker exec ${TEST_CONTAINER} apt-get update
                        docker exec ${TEST_CONTAINER} apt-get install -y openjdk-11-jdk
                        docker exec ${TEST_CONTAINER} java -jar /opt/myjarfile/build1.war &
                    """
                }
            }
        }
        stage('Run Tests') {
            steps {
                script {
                    sh """
                        # Add your Selenium test case here
                        echo "Running Selenium test case..."
                        # Example: docker run --network host selenium/standalone-chrome java -jar your-selenium-tests.jar
                    """
                }
            }
        }
        stage('Deploy to Production') {
            steps {
                script {
                    // Copy the WAR file to the Ansible directory
                    sh "cp ${ARTIFACT_NAME}-${BUILD_VERSION}.war ${ANSIBLE_PATH}/roles/java_app/files/"
                    
                    // Run the Ansible playbook
                    dir(ANSIBLE_PATH) {
                        ansiblePlaybook(
                            playbook: 'deploy_app.yml',
                            inventory: 'inventory',
                            extras: "-e \"build_version=${BUILD_VERSION} prod_server=${PROD_SERVER} prod_user=${PROD_USER}\""
                        )
                    }
                }
            }
        }
    }
    post {
        always {
            script {
                sh "docker stop ${TEST_CONTAINER} || true"
            }
        }
    }
}

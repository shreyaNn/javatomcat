pipeline {
    agent { label 'jenkins-agent' }
    environment {
        MAVEN_HOME = tool 'Maven 3'
        PATH = "${MAVEN_HOME}/bin:${env.PATH}"
        TOMCAT_URL = 'http://tomcat:8888/login-web-app'
        TOMCAT_WEBAPPS = '/usr/local/tomcat/webapps'
        NEXUS_URL = 'http://nexus:8081'
        SELENIUM_HUB = 'http://selenium-hub:4444/wd/hub'
    }
    stages {
        stage('Checkout') {
            steps {
                git branch: 'feature/userlogin', url: 'https://github.com/shreyaNn/javatomcat.git'
            }
        }
        
        stage('Build WAR') {
            steps {
                dir('login-web-app') {
                    sh """
                    mvn clean package -B \
                    -Dmaven.repo.local=${WORKSPACE}/.m2/repository \
                    -Dmaven.wagon.http.ssl.insecure=true \
                    -Dmaven.wagon.http.ssl.allowall=true \
                    -Dmaven.wagon.http.ssl.ignore.validity.dates=true \
                    -DaltDeploymentRepository=nexus::default::${NEXUS_URL}/repository/maven-public/
                    """
                }
            }
        }
        
        stage('Deploy to Tomcat') {
            steps {
                sh "docker cp login-web-app/target/login-web-app-1.0-SNAPSHOT.war tomcat:${TOMCAT_WEBAPPS}/login-web-app.war"
                sleep 30 // Wait for deployment to complete
            }
        }

        stage('Verify Tomcat Deployment') {
            steps {
                sh "curl -s ${TOMCAT_URL} > /dev/null"
            }
        }
        
        stage('Update Test Configuration') {
            steps {
                sh """
                sed -i 's|http://localhost:8888/login-web-app|${TOMCAT_URL}|g' login-web-app/src/test/java/com/example/*.java
                sed -i 's|http://localhost:4444/wd/hub|${SELENIUM_HUB}|g' login-web-app/src/test/java/com/example/*.java
                """
            }
        }

        stage('Run Selenium Tests') {
            steps {
                dir('login-web-app') {
                    sh """
                    mvn test -B \
                    -Dmaven.repo.local=${WORKSPACE}/.m2/repository \
                    -Dwebdriver.remote.url=${SELENIUM_HUB} \
                    -Dapplication.url=${TOMCAT_URL} \
                    -Dmaven.wagon.http.ssl.insecure=true \
                    -Dmaven.wagon.http.ssl.allowall=true \
                    -Dmaven.wagon.http.ssl.ignore.validity.dates=true
                    """
                }
            }
        }     

        stage('Verify Application Access') {
            steps {
                sh "curl -s ${TOMCAT_URL} > /dev/null"
            }
        }
    }
    post {
        failure {
            echo 'Pipeline failed!'
        }
        success {
            echo 'Pipeline succeeded!'
        }
    }
}

pipeline {
    agent { label 'jenkins-agent' }
    environment {
        MAVEN_HOME = tool 'Maven 3'
        PATH = "${MAVEN_HOME}/bin:${env.PATH}"
        TOMCAT_URL = 'http://tomcat:8080/login-web-app-1.0-SNAPSHOT'
        TOMCAT_WEBAPPS = '/usr/local/tomcat/webapps'
        NEXUS_URL = 'http://nexus:8081'
        NEXUS_IP = '172.17.0.1' // Replace with the actual IP of your Nexus container
        SELENIUM_HUB = 'http://selenium-hub:4444/wd/hub' // Update this to your Selenium Hub address
    }
    stages {
        stage('Checkout') {
            steps {
                script {
                    try {
                        git branch: 'feature/userlogin', url: 'https://github.com/shreyaNn/javatomcat.git'
                    } catch (Exception e) {
                        echo "Failed to checkout. Error: ${e.getMessage()}"
                        error "Repository checkout failed"
                    }
                }
            }
        }
        stage('Build WAR') {
            steps {
                dir('login-web-app') {
                    script {
                        try {
                            sh """
                            mvn clean package -B -X \
                            -Dmaven.repo.local=${WORKSPACE}/.m2/repository \
                            -Dmaven.wagon.http.ssl.insecure=true \
                            -Dmaven.wagon.http.ssl.allowall=true \
                            -Dmaven.wagon.http.ssl.ignore.validity.dates=true \
                            -DaltDeploymentRepository=nexus::default::${NEXUS_URL}/repository/maven-public/
                            """
                        } catch (Exception e) {
                            echo "Maven build failed. Error: ${e.getMessage()}"
                            error "Maven build failed"
                        }
                    }
                }
            }
        }
        stage('Deploy to Tomcat') {
            steps {
                script {
                    try {
                        sh "docker cp login-web-app/target/login-web-app-1.0-SNAPSHOT.war tomcat:${TOMCAT_WEBAPPS}/login-web-app-1.0-SNAPSHOT.war"
                        sleep 30 // Wait for deployment to complete
                    } catch (Exception e) {
                        echo "Deployment to Tomcat failed. Error: ${e.getMessage()}"
                        error "Deployment to Tomcat failed"
                    }
                }
            }
        }
        stage('Update Test Configuration') {
            steps {
                script {
                    sh """
                    sed -i 's|http://localhost:8080/login-web-app|${TOMCAT_URL}|g' login-web-app/src/test/java/com/example/*.java
                    sed -i 's|http://localhost:4444/wd/hub|${SELENIUM_HUB}|g' login-web-app/src/test/java/com/example/*.java
                    """
                }
            }
        }
        stage('Run Selenium Tests') {
            steps {
                dir('login-web-app') {
                    script {
                        try {
                            sh """
                            mvn test -B \
                            -Dmaven.repo.local=${WORKSPACE}/.m2/repository \
                            -Dmaven.wagon.http.ssl.insecure=true \
                            -Dmaven.wagon.http.ssl.allowall=true \
                            -Dmaven.wagon.http.ssl.ignore.validity.dates=true
                            """
                        } catch (Exception e) {
                            echo "Selenium tests failed. Error: ${e.getMessage()}"
                            error "Selenium tests failed"
                        }
                    }
                }
            }
        }
        stage('Verify Deployment') {
            steps {
                script {
                    try {
                        sh "curl -f ${TOMCAT_URL}"
                    } catch (Exception e) {
                        echo "Verification failed. Error: ${e.getMessage()}"
                        error "Verification failed"
                    }
                }
            }
        }
    }
    post {
        failure {
            echo 'Pipeline failed!'
        }
        success {
            echo 'Pipeline succeeded!'
        }
    }
}
